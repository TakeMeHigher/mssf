<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="BookmarkManager">
    <bookmark url="file://$PROJECT_DIR$/链表/链表.py" line="100" />
    <bookmark url="file://$PROJECT_DIR$/链表/链表.py" line="135" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="9b8331b2-d2cf-4b3d-a507-26ba34dc9689" name="Default" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/二叉树/堆排序.py" beforeDir="false" afterPath="$PROJECT_DIR$/二叉树/堆排序.py" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CoverageDataManager">
    <SUITE FILE_PATH="coverage/$sumtwo.coverage" NAME="sumtwo Coverage Results" MODIFIED="1554123246250" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/$_heap_.coverage" NAME="堆排序(heap) Coverage Results" MODIFIED="1553992772967" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/mssf$.coverage" NAME="堆排序 Coverage Results" MODIFIED="1594375316711" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/排序算法" />
    <SUITE FILE_PATH="coverage/$topk.coverage" NAME="topk Coverage Results" MODIFIED="1553993502658" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/$.coverage" NAME="单链表 Coverage Results" MODIFIED="1586000870948" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/链表" />
    <SUITE FILE_PATH="coverage/mssf$__init__.coverage" NAME="__init__ Coverage Results" MODIFIED="1594375707052" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/二叉树" />
    <SUITE FILE_PATH="coverage/$com.coverage" NAME="com Coverage Results" MODIFIED="1561648298836" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/test" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/二叉树/堆排序.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="473">
              <caret line="123" column="38" selection-start-line="123" selection-start-column="38" selection-end-line="123" selection-end-column="38" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/排序算法/归并排序.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="435">
              <caret line="39" column="26" selection-start-line="39" selection-end-line="40" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/排序算法/堆排序.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="786">
              <caret line="73" column="10" lean-forward="true" selection-start-line="73" selection-start-column="10" selection-end-line="73" selection-end-column="10" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/topk.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="855">
              <caret line="45" column="16" selection-start-line="45" selection-start-column="12" selection-end-line="45" selection-end-column="16" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>plot</find>
      <find>formula_format</find>
      <find>nan</find>
      <find>掌阅</find>
      <find>self.count</find>
      <find>remove_max</find>
      <find>build</find>
    </findStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/stock/简单括号匹配问题(栈).py" />
        <option value="$PROJECT_DIR$/stock/复杂符号匹配问题.py" />
        <option value="$PROJECT_DIR$/stock/十进制转二进制.py" />
        <option value="$PROJECT_DIR$/stock/__init__.py" />
        <option value="$PROJECT_DIR$/stock/后缀表达式求值.py" />
        <option value="$PROJECT_DIR$/栈和队列/queue.py" />
        <option value="$PROJECT_DIR$/queue/queue.py" />
        <option value="$PROJECT_DIR$/queue/队列.py" />
        <option value="$PROJECT_DIR$/queue/__init__.py" />
        <option value="$PROJECT_DIR$/queue/如何从数组中找出满足a+b=c+d的两个数对.py" />
        <option value="$PROJECT_DIR$/queue/实现lru缓存.py" />
        <option value="$PROJECT_DIR$/链表.py" />
        <option value="$PROJECT_DIR$/链表/lru缓存.py" />
        <option value="$PROJECT_DIR$/链表/有序链表的合并.py" />
        <option value="$PROJECT_DIR$/stock/简单求值.py" />
        <option value="$PROJECT_DIR$/stock/中缀表达式转后缀表达式.py" />
        <option value="$PROJECT_DIR$/选择排序.py" />
        <option value="$PROJECT_DIR$/归并排序.py" />
        <option value="$PROJECT_DIR$/快排.py" />
        <option value="$PROJECT_DIR$/排序算法.py" />
        <option value="$PROJECT_DIR$/排序算法/计数排序.py" />
        <option value="$PROJECT_DIR$/二分查找/查找第一个值等于给定值的元素.py" />
        <option value="$PROJECT_DIR$/二分查找/查找第一个大于等于给定值的元素.py" />
        <option value="$PROJECT_DIR$/二分查找/查找最后一个小于等于给定值的元素.py" />
        <option value="$PROJECT_DIR$/aa.py" />
        <option value="$PROJECT_DIR$/哈希/aa.py" />
        <option value="$PROJECT_DIR$/栈/中缀表达式转后缀表达式.py" />
        <option value="$PROJECT_DIR$/topk.py" />
        <option value="$PROJECT_DIR$/两个队列实现一个堆栈.py" />
        <option value="$PROJECT_DIR$/两个栈实现一个队列.py" />
        <option value="$PROJECT_DIR$/二分查找/二分查找递归.py" />
        <option value="$PROJECT_DIR$/二分查找/二分查找.py" />
        <option value="$PROJECT_DIR$/连续最大和.py" />
        <option value="$PROJECT_DIR$/斐波那契数列.py" />
        <option value="$PROJECT_DIR$/排序算法/归并排序.py" />
        <option value="$PROJECT_DIR$/排序算法/插入排序.py" />
        <option value="$PROJECT_DIR$/排序算法/选择排序.py" />
        <option value="$PROJECT_DIR$/排序算法/快排.py" />
        <option value="$PROJECT_DIR$/排序算法/冒泡.py" />
        <option value="$PROJECT_DIR$/排序算法/堆排序(heap).py" />
        <option value="$PROJECT_DIR$/__init__.py" />
        <option value="$PROJECT_DIR$/链表/单链表.py" />
        <option value="$PROJECT_DIR$/排序算法/堆排序.py" />
        <option value="$PROJECT_DIR$/排序算法/堆排序(推荐).py" />
        <option value="$PROJECT_DIR$/二叉树/__init__.py" />
        <option value="$PROJECT_DIR$/二叉树/二叉搜索树简单.py" />
        <option value="$PROJECT_DIR$/二叉树/二叉查找树.py" />
        <option value="$PROJECT_DIR$/二叉树/二叉堆.py" />
        <option value="$PROJECT_DIR$/二分查找/查找最后一个值等于给定值的元素.py" />
        <option value="$PROJECT_DIR$/二叉树/topk.py" />
        <option value="$PROJECT_DIR$/二叉树/堆排序.py" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds" extendedState="6" fullScreen="true">
    <option name="y" value="23" />
    <option name="width" value="1680" />
    <option name="height" value="976" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="mssf" type="b2602c69:ProjectViewProjectNode" />
              <item name="mssf" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="mssf" type="b2602c69:ProjectViewProjectNode" />
              <item name="mssf" type="462c0819:PsiDirectoryNode" />
              <item name="二分查找" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="mssf" type="b2602c69:ProjectViewProjectNode" />
              <item name="mssf" type="462c0819:PsiDirectoryNode" />
              <item name="二叉树" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="mssf" type="b2602c69:ProjectViewProjectNode" />
              <item name="mssf" type="462c0819:PsiDirectoryNode" />
              <item name="单例模式" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="mssf" type="b2602c69:ProjectViewProjectNode" />
              <item name="mssf" type="462c0819:PsiDirectoryNode" />
              <item name="哈希" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="mssf" type="b2602c69:ProjectViewProjectNode" />
              <item name="mssf" type="462c0819:PsiDirectoryNode" />
              <item name="排序算法" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="mssf" type="b2602c69:ProjectViewProjectNode" />
              <item name="mssf" type="462c0819:PsiDirectoryNode" />
              <item name="栈" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="mssf" type="b2602c69:ProjectViewProjectNode" />
              <item name="mssf" type="462c0819:PsiDirectoryNode" />
              <item name="链表" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="mssf" type="b2602c69:ProjectViewProjectNode" />
              <item name="mssf" type="462c0819:PsiDirectoryNode" />
              <item name="队列" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scope" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="settings.editor.selected.configurable" value="leetcode.id" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/二叉树" />
      <recent name="D:\code\算法\test" />
      <recent name="D:\code\算法" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/二叉树" />
      <recent name="$PROJECT_DIR$/排序算法" />
      <recent name="$PROJECT_DIR$/链表" />
      <recent name="$PROJECT_DIR$/二分查找" />
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Python.__init__">
    <configuration name="堆排序" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="算法" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/排序算法" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/排序算法/堆排序.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="中缀表达式转后缀表达式" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="算法" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/栈" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/栈/中缀表达式转后缀表达式.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="连续最大和" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="算法" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/连续最大和.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
    </configuration>
    <configuration name="两个队列实现一个堆栈" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="算法" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/两个队列实现一个堆栈.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
    </configuration>
    <configuration name="链表" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="算法" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/链表.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
    </configuration>
    <configuration name="二叉搜索树简单" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="算法" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/二叉树" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/二叉树/二叉搜索树简单.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="链表" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="算法" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/链表.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
    </configuration>
    <configuration name="单链表" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/链表" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="算法" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/链表/单链表.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
    </configuration>
    <configuration name="二分查找" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="算法" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/二分查找" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/二分查找/二分查找.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="计数排序" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="算法" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/排序算法" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/排序算法/计数排序.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="二分查找递归" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="算法" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/二分查找递归.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="连续最大和" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="算法" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/连续最大和.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
    </configuration>
    <configuration name="归并排序" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="算法" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/归并排序.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
    </configuration>
    <configuration name="__init__" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="算法" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/二叉树" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/二叉树/__init__.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="如何从数组中找出满足a+b=c+d的两个数对" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="算法" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/队列" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/队列/如何从数组中找出满足a+b=c+d的两个数对.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="aa" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="算法" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/aa.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Python.aa" />
      <item itemvalue="Python.堆排序" />
      <item itemvalue="Python.如何从数组中找出满足a+b=c+d的两个数对" />
      <item itemvalue="Python.__init__" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Python.__init__" />
        <item itemvalue="Python.堆排序" />
        <item itemvalue="Python.如何从数组中找出满足a+b=c+d的两个数对" />
        <item itemvalue="Python.aa" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="9b8331b2-d2cf-4b3d-a507-26ba34dc9689" name="Default" comment="" />
      <created>1550500586539</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1550500586539</updated>
      <workItem from="1586052136404" duration="28889000" />
      <workItem from="1586958030817" duration="1715000" />
      <workItem from="1589079080684" duration="2428000" />
      <workItem from="1590201062184" duration="59077000" />
      <workItem from="1594303907608" duration="6661000" />
      <workItem from="1594349557403" duration="16145000" />
      <workItem from="1594784214015" duration="596000" />
      <workItem from="1594950407939" duration="523000" />
      <workItem from="1595590875774" duration="473000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="116507000" />
  </component>
  <component name="ToolWindowManager">
    <frame x="0" y="0" width="1680" height="1050" extended-state="0" />
    <layout>
      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.23870574" />
      <window_info id="Structure" order="1" weight="0.24969475" />
      <window_info id="Favorites" order="2" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" weight="0.3291536" />
      <window_info anchor="bottom" id="Run" order="2" weight="0.22048067" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.19749217" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="Version Control" order="7" />
      <window_info active="true" anchor="bottom" id="Terminal" order="8" visible="true" weight="0.2570533" />
      <window_info anchor="bottom" id="Python Console" order="9" />
      <window_info anchor="bottom" id="Event Log" order="10" side_tool="true" />
      <window_info anchor="bottom" id="Docker" order="11" show_stripe_button="false" />
      <window_info anchor="bottom" id="Database Changes" order="12" />
      <window_info anchor="bottom" id="Concurrent Activities Diagram" order="13" weight="0.32978722" />
      <window_info anchor="right" id="Commander" order="0" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="Data View" order="3" />
      <window_info anchor="right" id="Database" order="4" />
      <window_info anchor="right" id="SciView" order="5" />
      <window_info anchor="right" id="leetcode" order="6" side_tool="true" visible="true" weight="0.14224665" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <default-breakpoints>
        <breakpoint type="python-exception">
          <properties notifyOnTerminate="true" exception="BaseException">
            <option name="notifyOnTerminate" value="true" />
          </properties>
        </breakpoint>
      </default-breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/$er_tree.coverage" NAME="er_tree Coverage Results" MODIFIED="1586600882751" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/二叉树" />
    <SUITE FILE_PATH="coverage/$_1_.coverage" NAME="[1]两数之和 Coverage Results" MODIFIED="1590202058143" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/var/folders/4p/z3dd8f3x1zg57ljszg09zdtm0000gn/T/leetcode/editor/cn" />
    <SUITE FILE_PATH="coverage/$__.coverage" NAME="简单括号匹配问题(栈) Coverage Results" MODIFIED="1591719179523" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/stock" />
    <SUITE FILE_PATH="coverage/$new.coverage" NAME="new Coverage Results" MODIFIED="1591110318098" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/单例模式" />
    <SUITE FILE_PATH="coverage/$_3_.coverage" NAME="[3]无重复字符的最长子串 Coverage Results" MODIFIED="1590213935289" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/var/folders/4p/z3dd8f3x1zg57ljszg09zdtm0000gn/T/leetcode/editor/cn" />
    <SUITE FILE_PATH="coverage/$.coverage" NAME="二叉搜索树简单 Coverage Results" MODIFIED="1594310803973" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/二叉树" />
    <SUITE FILE_PATH="coverage/$_2_.coverage" NAME="[2]两数相加 Coverage Results" MODIFIED="1590205752234" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="/var/folders/4p/z3dd8f3x1zg57ljszg09zdtm0000gn/T/leetcode/editor/cn" />
    <SUITE FILE_PATH="coverage/$lru.coverage" NAME="lru缓存 Coverage Results" MODIFIED="1593013087655" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/链表" />
    <SUITE FILE_PATH="coverage/$a_b_c_d.coverage" NAME="如何从数组中找出满足a+b=c+d的两个数对 Coverage Results" MODIFIED="1593921326656" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/队列" />
    <SUITE FILE_PATH="coverage/$aa.coverage" NAME="aa Coverage Results" MODIFIED="1593528035868" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/栈/简单括号匹配问题(栈).py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="285">
          <caret line="19" column="19" lean-forward="true" selection-start-line="19" selection-start-column="19" selection-end-line="19" selection-end-column="19" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/排序算法/冒泡.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="435">
          <caret line="29" column="9" selection-start-line="29" selection-start-column="8" selection-end-line="29" selection-end-column="9" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/排序算法/选择排序.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="345">
          <caret line="23" column="20" lean-forward="true" selection-start-line="23" selection-start-column="20" selection-end-line="23" selection-end-column="20" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/排序算法/插入排序.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="285">
          <caret line="19" column="19" lean-forward="true" selection-start-line="19" selection-start-column="19" selection-end-line="19" selection-end-column="19" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/排序算法.py" />
    <entry file="file://$PROJECT_DIR$/二分查找/__init__.py">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/链表/lru缓存.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-694">
          <caret line="6" column="30" selection-start-line="6" selection-start-column="30" selection-end-line="6" selection-end-column="30" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/aa.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="285">
          <caret line="19" column="8" selection-start-line="19" selection-start-column="8" selection-end-line="19" selection-end-column="30" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/__init__.py">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/栈/复杂符号匹配问题.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="510">
          <caret line="34" lean-forward="true" selection-start-line="34" selection-end-line="34" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/栈/简单求值.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="524">
          <caret line="52" column="46" lean-forward="true" selection-start-line="52" selection-start-column="46" selection-end-line="52" selection-end-column="46" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/队列/如何从数组中找出满足a+b=c+d的两个数对.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="195">
          <caret line="13" column="25" lean-forward="true" selection-start-line="13" selection-start-column="21" selection-end-line="13" selection-end-column="25" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/队列/两个队列实现一个栈.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="165">
          <caret line="11" column="38" lean-forward="true" selection-start-line="11" selection-start-column="38" selection-end-line="11" selection-end-column="38" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/队列/两个栈实现一个队列.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="255">
          <caret line="17" lean-forward="true" selection-start-line="17" selection-end-line="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/斐波那契数列.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="210">
          <caret line="14" selection-start-line="14" selection-end-line="14" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/连续最大和.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="270">
          <caret line="18" column="27" selection-start-line="18" selection-start-column="27" selection-end-line="18" selection-end-column="27" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/二分查找/二分查找.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="660">
          <caret line="44" column="22" selection-start-line="44" selection-start-column="22" selection-end-line="44" selection-end-column="22" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/二分查找/查找第一个大于等于给定值的元素.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="210">
          <caret line="14" selection-start-line="14" selection-end-line="14" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/二分查找/查找最后一个小于等于给定值的元素.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="210">
          <caret line="14" column="15" selection-start-line="14" selection-start-column="15" selection-end-line="14" selection-end-column="15" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/二分查找/查找第一个值等于给定值的元素.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="180">
          <caret line="12" column="17" selection-start-line="12" selection-start-column="17" selection-end-line="12" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/哈希/aa.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="38">
          <caret line="2" column="2311" selection-start-line="2" selection-start-column="2311" selection-end-line="2" selection-end-column="2311" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/排序算法/二叉堆.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="361">
          <caret line="19" column="31" selection-start-line="19" selection-start-column="31" selection-end-line="19" selection-end-column="31" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/排序算法/计数排序.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="437">
          <caret line="23" selection-start-line="23" selection-end-line="23" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/二叉树/er_tree.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="665">
          <caret line="35" column="34" selection-start-line="23" selection-start-column="3" selection-end-line="35" selection-end-column="34" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/leetcode/两数之和.py">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/leetcode/无重复字符的最长字串.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-341" />
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/哈希/hashmap.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-246">
          <caret line="33" column="23" selection-start-line="33" selection-start-column="23" selection-end-line="33" selection-end-column="23" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/栈/中缀表达式转后缀表达式.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="304">
          <caret line="16" column="28" lean-forward="true" selection-start-line="16" selection-start-column="28" selection-end-line="16" selection-end-column="28" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/栈/十进制转二进制.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="285">
          <caret line="15" column="18" selection-start-line="15" selection-start-column="18" selection-end-line="15" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/栈/后缀表达式求值.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="494">
          <caret line="26" column="26" lean-forward="true" selection-start-line="18" selection-end-line="26" selection-end-column="26" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/栈/复杂的括号匹配.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="456">
          <caret line="24" selection-start-line="24" selection-end-line="24" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/队列/实现lru缓存.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="589">
          <caret line="31" selection-start-line="31" selection-end-line="31" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/队列/计算器.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-1628">
          <caret line="22" column="20" lean-forward="true" selection-start-line="22" selection-start-column="20" selection-end-line="22" selection-end-column="20" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/链表/链表.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="500">
          <caret line="152" selection-start-line="152" selection-end-line="152" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/链表/单链表.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="766">
          <caret line="269" selection-start-line="269" selection-end-line="269" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/排序算法/堆排序(heap).py">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$USER_HOME$/Library/Caches/PyCharm2018.3/python_stubs/-1458790438/builtins.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="250">
          <caret line="3629" column="8" selection-start-line="3629" selection-start-column="8" selection-end-line="3629" selection-end-column="8" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/排序算法/堆排序(推荐).py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="2375">
          <caret line="127" column="17" selection-start-line="127" selection-start-column="17" selection-end-line="127" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/二叉树/__init__.py">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/二叉树/二叉查找树.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="95">
          <caret line="5" column="3" selection-start-line="5" selection-start-column="3" selection-end-line="5" selection-end-column="3" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/二叉树/二叉搜索树简单.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="190">
          <caret line="10" column="36" lean-forward="true" selection-start-line="10" selection-start-column="36" selection-end-line="10" selection-end-column="36" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/二叉树/二叉堆.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="95">
          <caret line="5" column="3" selection-start-line="5" selection-start-column="3" selection-end-line="5" selection-end-column="3" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/二分查找/二分查找递归.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="399">
          <caret line="21" selection-start-line="21" selection-end-line="21" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/二分查找/查找最后一个值等于给定值的元素.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="361">
          <caret line="19" lean-forward="true" selection-start-line="19" selection-end-line="19" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/sumtwo.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="304">
          <caret line="16" column="12" lean-forward="true" selection-start-line="16" selection-start-column="12" selection-end-line="16" selection-end-column="12" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/排序算法/快排.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="635">
          <caret line="59" lean-forward="true" selection-start-line="59" selection-end-line="59" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/二叉树/topk.py" />
    <entry file="file://$PROJECT_DIR$/topk.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="855">
          <caret line="45" column="16" selection-start-line="45" selection-start-column="12" selection-end-line="45" selection-end-column="16" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/排序算法/归并排序.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="435">
          <caret line="39" column="26" selection-start-line="39" selection-end-line="40" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/排序算法/堆排序.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="786">
          <caret line="73" column="10" lean-forward="true" selection-start-line="73" selection-start-column="10" selection-end-line="73" selection-end-column="10" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/二叉树/堆排序.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="473">
          <caret line="123" column="38" selection-start-line="123" selection-start-column="38" selection-end-line="123" selection-end-column="38" />
        </state>
      </provider>
    </entry>
  </component>
</project>